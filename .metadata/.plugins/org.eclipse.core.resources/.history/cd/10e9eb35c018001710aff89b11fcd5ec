/*
 * Organism.cpp
 *
 *  Created on: Apr 3, 2017
 *      Author: joshua
 */

#include "Organism.h"
#include <iostream>
static const char alphaNum[] = "AGTC";

char mutation(char c, int mutation_probability) {
	int a = time(NULL);
	int b = time(NULL);
	srand((b - a) * 1000);
	int r = rand() % 100;
	std::cout << r << std::endl;
	char ctemp;
	if (r <= mutation_probability) ctemp = alphaNum[rand() % (sizeof(alphaNum)- 1)];
	else ctemp = c;
	return ctemp;
}

Organism::Organism(std::string sequence) {
	// TODO Auto-generated constructor stub
	_sequence = sequence;
}

Organism::~Organism() {
	// TODO Auto-generated destructor stub
}

std::string Organism::getSequence() {
	return _sequence;
}
Organism * Organism::reproduce(int mutation_probability) {
	// TODO Loop through the string, apply function that might mutate a character
	std::string temp = "";
	for (unsigned int i = 0; i < _sequence.size(); i++) {
		temp += mutation(_sequence[i], mutation_probability);
	}
	return new Organism(temp);
}
